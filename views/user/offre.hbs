<!DOCTYPE html>
<html lang="fr">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>VipJob.tn - Offres d'emploi</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>

<body class="min-h-screen flex flex-col bg-gradient-to-b from-blue-50 to-white">

  {{> header1 }}

  <!-- Hero Section with Carousel -->
  <section class="relative w-full h-[60vh] bg-blue-500 overflow-hidden">
    <div id="carousel" class="absolute inset-0 flex transition-all duration-700 ease-in-out">
      <div class="carousel-item w-full flex-shrink-0">
        <div class="h-full bg-cover bg-center" style="background-image: url('https://via.placeholder.com/1920x1080?text=Offre+1');">
          <div class="flex justify-center items-center h-full bg-black bg-opacity-50">
            <h2 class="text-white text-5xl font-bold">Découvrez les meilleures opportunités professionnelles</h2>
          </div>
        </div>
      </div>
      <div class="carousel-item w-full flex-shrink-0">
        <div class="h-full bg-cover bg-center" style="background-image: url('https://via.placeholder.com/1920x1080?text=Offre+2');">
          <div class="flex justify-center items-center h-full bg-black bg-opacity-50">
            <h2 class="text-white text-5xl font-bold">Rejoignez les leaders du marché de l'emploi</h2>
          </div>
        </div>
      </div>
      <div class="carousel-item w-full flex-shrink-0">
        <div class="h-full bg-cover bg-center" style="background-image: url('https://via.placeholder.com/1920x1080?text=Offre+3');">
          <div class="flex justify-center items-center h-full bg-black bg-opacity-50">
            <h2 class="text-white text-5xl font-bold">Boostez votre carrière avec des offres exclusives</h2>
          </div>
        </div>
      </div>
    </div>

    <!-- Carousel Navigation -->
    <div class="absolute top-1/2 left-0 right-0 flex justify-between px-6">
      <button id="prev" class="text-white text-3xl bg-black bg-opacity-50 p-2 rounded-full">
        <i class="fas fa-chevron-left"></i>
      </button>
      <button id="next" class="text-white text-3xl bg-black bg-opacity-50 p-2 rounded-full">
        <i class="fas fa-chevron-right"></i>
      </button>
    </div>
  </section>

  <!-- Main Content -->
  <main class="flex-grow pt-28 pb-16 px-6 relative z-10">
    <div class="container mx-auto px-8 py-8">
      <div class="text-center mb-12">
        <h1 class="text-4xl font-bold text-blue-700 mb-4">Offres d'emploi</h1>
        <p class="text-gray-600 max-w-2xl mx-auto">Découvrez les meilleures opportunités professionnelles en Tunisie</p>
      </div>

      <!-- Domain Filter Dropdown -->
      <div class="flex justify-center mb-8">
        <select id="domain-filter" class="p-2 border rounded-md shadow-sm">
          <option value="all">Toutes les offres</option>
          <option value="my-domain">Offres de mon domaine</option>
        </select>
      </div>

<div class="p-6 bg-white rounded-md shadow-md mb-6">
  <h2 class="text-2xl font-bold mb-4">Recherche Avancée</h2>
  <form id="advanced-search-form" class="grid grid-cols-1 md:grid-cols-3 gap-4">
    <input type="text" id="search-titre" placeholder="Titre de l'emploi" class="p-2 border rounded-md">
    <select id="search-domaine" class="p-2 border rounded-md">
     
    <option value="" disabled selected>Choisissez un domaine</option>
    <option value="informatique">Informatique et Développement</option>
    <option value="cybersecurite">Cybersécurité</option>
    <option value="intelligence_artificielle">Intelligence Artificielle et Data Science</option>
    <option value="telecom">Télécommunications et Réseaux</option>
    <option value="electronique">Électronique et Automatisme</option>
    <option value="sante">Médecine et Pharmacie</option>
    <option value="paramedical">Paramédical et Biotechnologie</option>
    <option value="education">Enseignement et Formation</option>
    <option value="recherche">Recherche Scientifique</option>
    <option value="industrie">Industrie et Fabrication</option>
    <option value="automobile">Automobile et Aéronautique</option>
    <option value="commerce">Commerce et Distribution</option>
    <option value="banque">Banque, Assurance et Finance</option>
    <option value="tourisme">Tourisme et Hôtellerie</option>
    <option value="restauration">Restauration et Agroalimentaire</option>
    <option value="transport">Transport et Logistique</option>
    <option value="btp">Bâtiment, Travaux Publics et Architecture</option>
    <option value="agriculture">Agriculture et Pêche</option>
    <option value="energie">Énergie et Environnement</option>
    <option value="juridique">Droit et Services Juridiques</option>
    <option value="marketing">Marketing, Communication et Publicité</option>
    <option value="gestion">Gestion et Ressources Humaines</option>
    <option value="evenementiel">Événementiel</option>
    <option value="audiovisuel">Audiovisuel et Journalisme</option>
    <option value="art">Arts, Culture et Design</option>
    <option value="sport">Sport et Bien-être</option>
    <option value="social">Travail Social et Humanitaire</option>
    <option value="securite">Sécurité et Défense</option>
    </select>
    <select id="search-type" class="p-2 border rounded-md">
      <option value="">Tous types</option>
      <option value="CDI">CDI</option>
      <option value="CDD">CDD</option>
    </select>
    <div class="flex items-center mx-0 w-full">
          <button type="submit" class="p-2 bg-blue-600 text-white rounded-md">Rechercher</button>

    </div>
  </form>
</div>

      

      <!-- Liste des offres dynamiques -->
      <div id="offres-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Les offres seront ajoutées ici via JavaScript -->
      </div>
    </div>
  </main>

  {{> footer }}



<script>
  // Carousel logic
  let currentIndex = 0;
  const items = document.querySelectorAll('.carousel-item');
  const totalItems = items.length;

  function showItem(index) {
    items.forEach((item, i) => {
      item.classList.add('hidden');
      if (i === index) item.classList.remove('hidden');
    });
  }

  document.getElementById('next').addEventListener('click', () => {
    currentIndex = (currentIndex + 1) % totalItems;
    showItem(currentIndex);
  });

  document.getElementById('prev').addEventListener('click', () => {
    currentIndex = (currentIndex - 1 + totalItems) % totalItems;
    showItem(currentIndex);
  });

  showItem(currentIndex);

  // Function to format date
  function formatDate(dateString) {
    if (!dateString) return 'N/A';
    const date = new Date(dateString);
    return date.toLocaleDateString('fr-FR');
  }


function toggleFavorite(offreId) {
  const userId = localStorage.getItem("userId"); // À adapter selon ton système d'auth

  const icon = document.getElementById(`fav-icon-${offreId}`);
  const isFavorite = icon.classList.contains("fa-solid");

  const url = "/favorites";
  const data = { user_id: userId, offre_id: offreId };

  if (!isFavorite) {
    // Add to favorites
    fetch(url, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(data)
    })
    .then(res => res.json())
    .then(res => {
      icon.classList.remove("fa-regular", "text-gray-400");
      icon.classList.add("fa-solid", "text-red-500");
    })
    .catch(err => console.error(err));
  } else {
    // Remove from favorites
    fetch(url, {
      method: "DELETE",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(data)
    })
    .then(res => res.json())
    .then(res => {
      icon.classList.remove("fa-solid", "text-red-500");
      icon.classList.add("fa-regular", "text-gray-400");
    })
    .catch(err => console.error(err));
  }
}


  // Fetch job offers from API
  async function fetchOffres() {
    try {
      const response = await fetch('/display-offres');
      const data = await response.json();

      if (data.success) {
        offres = data.offres; // Store fetched offers
        displayOffres(offres);
      } else {
        document.getElementById('offres-container').innerHTML = "<p class='text-gray-600'>Aucune offre disponible.</p>";
      }
    } catch (error) {
      console.error("Erreur lors de la récupération des offres:", error);
      document.getElementById('offres-container').innerHTML = "<p class='text-red-500'>Erreur de chargement des offres.</p>";
    }
  }

  async function loadFavorites(userId) {
  try {

    const response = await fetch(`/favorites/${userId}`);
    const favorites = await response.json();
    return favorites.map(fav => fav.id);  // Return the list of favorite offer IDs
  } catch (error) {
    console.error("Error fetching favorites:", error);
    return [];
  }
} 
async function displayOffres(offresList, userId) {
  const container = document.getElementById('offres-container');
  container.innerHTML = '';

  const favoriteOffers = await loadFavorites(localStorage.getItem("userId"));  // Get favorite offers

offresList.forEach(offre => {
  const isFav = favoriteOffers.includes(offre.id);

  const heartIconClass = isFav
    ? 'fa-solid fa-heart text-red-500'
    : 'fa-regular fa-heart text-gray-400';

  const offreHTML = `
    <div class="max-w-md w-full bg-white shadow-lg rounded-2xl overflow-hidden transition hover:shadow-xl hover:scale-105 duration-300 m-4">
          ${offre.image ? `
      <img src="/uploads/${offre.image}" alt="${offre.titre}" class="w-full h-48 object-cover">
    ` : `
      <div class="w-full h-48 bg-gray-200 flex items-center justify-center text-gray-400 text-sm">
        Pas d'image disponible
      </div>
    `}
      <div class="relative p-6">
        <!-- Favorite Button -->
        <button onclick="toggleFavorite('${offre.id}')"
          class="absolute top-4 right-4 text-xl hover:scale-110 transition">
          <i id="fav-icon-${offre.id}" class="${heartIconClass}"></i>
        </button>

        <!-- Header -->
        <h2 class="text-xl font-bold text-gray-900 mb-2 truncate">${offre.titre}</h2>
        <p class="text-gray-600 text-sm mb-4 line-clamp-3">${offre.description}</p>

        <!-- Tags -->
        <div class="flex flex-wrap gap-2 mb-4">
          <span class="flex items-center gap-1 text-xs bg-blue-100 text-blue-800 font-medium px-3 py-1 rounded-full shadow-sm">
            <i class="fas fa-briefcase text-blue-500"></i> ${offre.domaine}
          </span>
          <span class="flex items-center gap-1 text-xs bg-green-100 text-green-800 font-medium px-3 py-1 rounded-full shadow-sm">
            <i class="fas fa-calendar-alt text-green-500"></i> Début: ${formatDate(offre.date_creation)}
          </span>
          <span class="flex items-center gap-1 text-xs bg-red-100 text-red-800 font-medium px-3 py-1 rounded-full shadow-sm">
            <i class="fas fa-hourglass-end text-red-500"></i> Fin: ${formatDate(offre.date_fin)}
          </span>
        </div>

        <!-- CTA Button -->
        <div class="mt-4">
          <button onclick="postuler('${offre.id}')"
            id="postuler-btn-${offre.id}"
            class="w-full flex items-center justify-center gap-2 bg-blue-600 text-white text-sm font-semibold py-3 rounded-full transition hover:bg-blue-700 shadow-md">
            <span class="spinner hidden w-4 h-4 border-2 border-t-transparent border-white rounded-full animate-spin"></span>
            <span class="btn-text">Postuler</span>
          </button>
        </div>
      </div>
    </div>
  `;

  container.innerHTML += offreHTML;
});

}

function postuler(offreId) {
  const utilisateurId = localStorage.getItem("userId");

  // Show loading spinner
  Swal.fire({
    title: 'Postulation en cours...',
    text: 'Veuillez patienter.',
    allowOutsideClick: false,
    allowEscapeKey: false,
    didOpen: () => {
      Swal.showLoading();
    }
  });

  fetch("/postuler", {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      utilisateur_id: utilisateurId,
      offre_id: offreId
    })
  })
  .then(response => response.json())
  .then(data => {
    Swal.close(); // Close loading

    if (data.success) {
      Swal.fire({
        icon: 'success',
        title: 'Succès',
        text: data.message
      });
    } else {
      Swal.fire({
        icon: 'warning',
        title: 'Oups...',
        text: data.message
      });
    }
  })
  .catch(error => {
    Swal.close(); // Close loading
    console.error("Erreur lors de la postulation :", error);
    Swal.fire({
      icon: 'error',
      title: 'Erreur',
      text: 'Une erreur est survenue lors de la postulation.'
    });
  });
}

  // Filter job offers by domain
  function filterOffresByDomain(selectedDomain) {
    let storedDomain = localStorage.getItem("domain");

    if (!storedDomain) {
      console.warn("Aucun domaine trouvé dans localStorage. Affichage de toutes les offres.");
      storedDomain = "all"; // Default value if no domain is stored
    }

    const filteredOffres = offres.filter(offre => {
      if (selectedDomain === "all") return true; // Show all offers
      return offre.domaine === storedDomain;
    });

    displayOffres(filteredOffres);
  }

  // Load job offers and add event listener for filter
  let offres = [];
  document.addEventListener('DOMContentLoaded', () => {
    fetchOffres();

    document.getElementById('domain-filter').addEventListener('change', (e) => {
      filterOffresByDomain(e.target.value);
    });
  });

  document.getElementById('advanced-search-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  const titre = document.getElementById('search-titre').value;
  const domaine = document.getElementById('search-domaine').value;
  const type = document.getElementById('search-type').value;

  try {
    const response = await fetch(`/search-offre?titre=${titre}&domaine=${domaine}&type_contrat=${type}`);
    const data = await response.json();

    if (data.success) {
      displayOffres(data.offres);
    } else {
      document.getElementById('offres-container').innerHTML = "<p class='text-gray-600'>Aucune offre trouvée.</p>";
    }
  } catch (error) {
    console.error("Erreur de recherche avancée:", error);
  }
});
  
</script>

</body>

</html>
